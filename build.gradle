import com.github.spotbugs.SpotBugsTask

plugins {
  id "com.github.hierynomus.license" version "0.14.0" apply false
  id 'com.github.johnrengelman.shadow' version '2.0.1' apply false
  id "com.github.spotbugs" version "1.6.0" apply false
}

allprojects {
  apply plugin: 'idea'
  group = 'cz.seznam.euphoria'
  version = '0.8.0'
}

subprojects {

  apply plugin: 'java'
  apply plugin: 'com.github.hierynomus.license'
  apply plugin: 'com.github.spotbugs'
  apply from: "${rootProject.projectDir}/gradle/versions.gradle"

  license {
    // ~ TODO: support for other file formats
    include '**/*.java'
    mapping('java', 'SLASHSTAR_STYLE')
    header = rootProject.file('HEADER')
    strictCheck = true
    ext.year = "2016-${Calendar.getInstance().get(Calendar.YEAR)}"
    ext.name = 'Seznam.cz, a.s.'
  }

  repositories {
    mavenCentral()
  }

  dependencies {
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "org.slf4j:slf4j-simple:${slf4jVersion}"
  }

  test {
    testLogging {
      events 'skipped', 'failed'
    }
  }

  tasks.withType(SpotBugsTask) {
    effort = 'max'
    reportLevel = 'high'
    reports {
      xml.enabled = false
      html.enabled = true
    }
  }

  gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
      options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
  }
}

// ~ configure euphoria sub-projects (excluding benchmarks and guava)

configure(subprojects.findAll { it.name.startsWith('euphoria') }) {

  apply plugin: 'maven'
  apply plugin: 'maven-publish'
  apply plugin: 'signing'

  sourceSets {
    test.compileClasspath += configurations.compileOnly
    test.runtimeClasspath += configurations.compileOnly
  }

  // ~ build & publish sources and javadoc jar

  task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc
  }

  artifacts {
    archives javadocJar, sourcesJar
  }

  signing {
    sign configurations.archives
  }

  publishing {
    publications {
      mavenJava(MavenPublication) {
        from components.java
        artifact sourcesJar
        artifact javadocJar
      }
    }
  }

  uploadArchives {
    repositories {
      mavenDeployer {
        beforeDeployment { signing.signPom(it) }

        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
          authentication(userName: nexusUser, password: nexusPassword)
        }

        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
          authentication(userName: nexusUser, password: nexusPassword)
        }

        pom.project {
          packaging 'jar'
          url 'https://github.com/seznam/euphoria/'

          scm {
            connection 'scm:git:https://github.com/seznam/euphoria.git'
            developerConnection 'scm:git:https://github.com/seznam/euphoria.git'
            url 'https://github.com/seznam/euphoria/'
          }

          licenses {
            license {
              name 'The Apache License, Version 2.0'
              url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
          }
        }
      }
    }
  }
 
}
